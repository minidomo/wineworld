all: lint format type-check

type-check:
	mypy .

lint:
	ruff check . --fix

format:
	isort .
	black .

test-style:
	ruff check .
	isort --check .
	black --check .
	mypy .

build-server:
	docker build -t wineworld-backend-dev -f docker/server/Dockerfile .

server:
	docker run --rm -p 4000:4000 wineworld-backend-dev

server-background:
	docker run --rm -d -p 4000:4000 wineworld-backend-dev

wineworld-service:
	make server

# stops the docker container the server is running on if applicable
stop-server:
	python3 -m scripts.stop_server

# name - name of script
# mode options:
# 	raw - uses API calls to obtain the data, and writes it to a file
# 	modify - reads the file generated by mode=raw, modifies the data, and writes it to a new file
#	final - reads the file generated by mode=modify, modifies the data, and writes it to a new file
scrape:
	python3 -m scripts.scrape.$(name) $(mode)

scrape-all:
	make scrape name=wines mode=raw
	make scrape name=wines mode=modify
	make scrape name=wine_reddit mode=raw
	make scrape name=vineyards mode=raw
	make scrape name=vineyards mode=modify
	make scrape name=region_nearby_locations mode=raw
	make scrape name=region_nearby_locations mode=modify
	make scrape name=region_location_details mode=raw
	make scrape name=region_location_details mode=modify
	make scrape name=region_info mode=raw
	make scrape name=region_photos mode=raw
	make scrape name=regions mode=final
	make scrape name=vineyards mode=final
	make scrape name=wines mode=final
